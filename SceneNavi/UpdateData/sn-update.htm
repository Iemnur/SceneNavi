<!DOCTYPE html>
<html lang="en-US">
	<head>
		<meta charset="utf-8" />
		<title>SceneNavi Update Page</title>
		<style type="text/css">
			body { font-family:sans-serif }
			span.mono { font-family:monospace; }
			
			.colorCycle:hover
			{ 
				animation-name: homeCycle;
				animation-duration:1s;
				animation-direction:alternate;
				animation-iteration-count:infinite;
				
				-webkit-animation-name: homeCycle;
				-webkit-animation-duration:1s;
				-webkit-animation-direction:alternate;
				-webkit-animation-iteration-count:infinite;
			}
			
			@keyframes homeCycle
			{
				0% {color:#00A;}
				25% {color:#0A0;}
				50% {color:#FF6200;}
				75% {color:#A06;}
			}
			
			@-webkit-keyframes homeCycle
			{
				0% {color:#00A;}
				25% {color:#0A0;}
				50% {color:#FF6200;}
				75% {color:#A06;}
			}
		</style>
	</head>
<body>
<h2>SceneNavi Update Page</h2>
<hr>
<h3>Current Version</h3>
<a class="colorCycle" href="http://magicstone.de/dzd/progupdates/SceneNavi-v10-beta9b.rar">SceneNavi v1.0 Beta 9b</a><br>
<br>
<a class="colorCycle" href="https://github.com/xdanieldzd/SceneNavi">Source code on GitHub</a><br>
<br>
<hr>
<h3>Release Notes</h3>
<h4>v1.0 Beta 9b ("Hotfix Redux?")</h4>
<ul>
  <li>Fixed generated GLSL shader code somewhat; should fix float conversion error during shader compilation</li>
  <li>Changed combiner emulation initialization; should now only try to initialize a combiner type when selected by user, not all on every startup</li>
</ul>
<h4>v1.0 Beta 9a ("My First Hotfix")</h4>
<ul>
  <li>Added additional sanity checks to prevent potential EntryPointNotFoundException and NullReferenceException, especially on lower-end hardware</li>
  <li>Changed versioning code to allow for hotfixes</li>
</ul>
<h4>v1.0 Beta 9 ("You've Got Shaders In My Fixed Functions!")</h4>
<ul>
  <li>Added new GLSL-based combiner emulation, still missing certain rendering details (ex. automatic texture-coordinate generation for reflections)</li>
  <li>Added support for anti-aliasing and mipmapping in renderer; can be toggled from menu</li>
  <li>Changed application configuration to use Nini library instead of .NET Properties.Settings</li>
  <li>Fixed various bugs; combiner inaccuracies, display list caching, Scene TreeView generation, mesh header types, etc.</li>
  <li>Added experimental help system, displays help string in status bar when hovering over menu items; still needs work</li>
  <li>Various other OpenGL-related changes and additions (ex. extension checks)</li>
  <li>Various minor GUI changes (ex. status bar appearance, Options menu arrangement)</li>
</ul>
<h4>v1.0 Beta 8 ("Fresh Water Laced With Bugfixes")</h4>
<ul>
  <li>Added waterbox support; allows changing of waterbox position, size, room number and other properties</li>
  <li>Added saving support for individual scene and room files; still requires a ROM to be loaded beforehand, but saves changes to the separate files</li>
  <li>Fixed loading of individual scene and room files; the changes to the treeview in Beta 7 broke header selection</li>
  <li>Fixed SFX and reverb options under Scene Metadata being disabled; slight GUI changes broke this feature</li>
  <li>Fixed ROM information window cutting off text prematurely if null byte is encountered in the ROM header's game title or ID</li>
  <li>Fixed and improved the actor editing GUI and underlying actor definition reader code slightly</li>
  <li>Fixed actor rotation rendering; the order in which rotation was applied during drawing was wrong before</li>
  <li>Added additional sanity checks to prevent unfixed "Stalfos Middle Room" (#120, syotes) from causing an exception on selecting its room</li>
  <li>Improved update and version checking functionality; now displays release notes from remote RTF file</li>
  <li>Added (temporary) program icon</li>
</ul>
<h4>v1.0 Beta 7 ("It's Not Dead!")</h4>
<ul>
  <li>Fixed conversion of I4 and I8 type textures; finally fixes missing alpha channels on ex. Hyrule Field pathways, certain cobwebs, etc.</li>
  <li>Added support for custom maps generated by Hylian Toolbox; problem was related to polygon type definition offsets</li>
  <li>Changed scene and room selection tree; headers now condensed into stages, similar to Map Select screen</li>
  <li>Area title card can now be exported for editing and reimported</li>
  <li>Added stubs for a few other features (ex. loading and editing of environment settings); not fully implemented yet</li>
</ul>
<h4>v1.0 Beta 6</h4>
<ul>
  <li>Finally added Scene Metadata tab, so far contains a few sound-related settings (daytime BGM, nighttime SFX, reverb); more settings to come</li>
  <li>Actor definition format changed; actor number now part of definition, definition can be set as default for certain actor types unless overridden by specific definition</li>
  <li>Changes to transition actor handling; added drop-down lists for rooms to transition actor editing, renamed some options for clarity</li>
  <li>Actor definitions now also support the properties "DisplayModel", "PickModel" and "FrontOffset", which are currently used mainly with transition actors (documentation forthcoming)</li>
  <li>Added mouse-based selection of rooms in static objects mode; only works when collision rendering is disabled; selects collision polygons as usual when enabled</li>
  <li>Added mouse-based selection of room model triangles and vertices; allows editing of vertex colors and alpha</li>
  <li>Fixes to Ucode interpreter to not reset certain parameters on display list calls (DL, BRANCH_Z); fixes missing textures on ex. Death Mountain</li>
  <li>Added texture loading macro workaround to Ucode interpreter, now also tries to load textures on SetCombine command; fixes a few missing textures, ex. walls in Water Temple's first room</li>
  <li>Fixes to texture loading macro implementation, potentially did not correctly apply palettes to CI-type textures; fixes incorrect textures on certain custom maps</li>
  <li>Fixed offset detection error with polygon type definitions on some custom maps; now correctly loads polygon types</li>
  <li>Removed some unnecessary OpenGL function calls; gives notable FPS increase in many cases, such as certain temples</li>
  <li>Added more fallbacks for lower-end hardware, added detection of Intel graphics hardware to disable combiner emulation regardless of the hardware's reported capabilities</li>
  <li>Fixed room display list caching; now no longer re-renders rooms on every scene change, even if a room has been cached before with the same settings (i.e. textures en-/disabled)</li>
  <li>Some refactoring to the program's internal data storage (i.e. which scene header is active and what it contains, which room header is active, etc)</li>
  <li>A few object picking bugfixes; ex. some erratic behavior when selecting things via middle-click</li>
  <li>More status messages, ex. for ROM loading and saving</li>
  <li>Rearranged Options menu</li>
</ul>
<h4>v1.0 Beta 5</h4>
<ul>
  <li>Texturing support and faking of PrimColor-based colorization for lower-end hardware</li>
  <li>Some bugfixes (glClearDepthf entry point, Control key IndexOutOfRangeException)</li>
</ul>
<h4>v1.0 Beta 4</h4>
<ul>
  <li>Changed mouse behavior to have three different modes:<br>
  &bull; Camera mode: Camera movement only<br>
  &bull; Moveable objects mode: Select and move things considered "moveable" by the program (actors, waypoints)<br>
  &bull; Static objects mode: Select immobile, static things (collision polygons)<br>
  Modes can be selected via menu or can be cycled through by clicking the mode label on the status bar<br>
  <br></li>
  <li>Implemented mouse-based actor and waypoint movement:<br>
  &bull; Left click: move object left, right, up and down (or X and Y axes with neutral camera)<br>
  &bull; Middle click OR left click and Ctrl key: move object forward or backward (or Z axis with neutral camera)<br>
  &bull; Right click: opens context menu that allows rotating the object in both directions on any supported axis<br>
  <br></li>
  <li>Limited collision editing enabled; collision polygons' polygon type association, and polygon types' ground type and raw 64-bit definition can be edited<br>
  (more separate options for ex. exit triggers, damage, etc. to come)<br>
  <br></li>
  <li>Added preliminary support for editing of individual scene and room files<br>
  &bull; Note: does not yet support saving, highly WIP<br>
  <br></li>
  <li>Improved overall collision overlay performance<br>
  &bull; Might incur slight stuttering when rapid changes are done to the collision, such as changing a polygon's ground type<br>
  <br></li>
  <li>Added ROM byte order detection and automatic byteswapping functions<br>
  &bull; If an incompatible byte order is detected, the program will ask if the user wants the ROM to be converted or, if the user does not want this, cancel loading<br>
  <br></li>
  <li>Added update checking functionality, can be manually accessed via the menu<br>
  &bull; Checks online for newer version of the program and can direct the user to a download if one is found<br>
  <br></li>
  <li>Actual functionality for the window's status bar implemented; now shown are:<br>
  &bull; Current mouse mode<br>
  &bull; Information about the currently loaded scene and room and/or general status messages<br>
  &bull; Current camera coordinates<br>
  <br></li>
  <li>Added VSync option for FPS limiting, can be toggled from the menu<br>
  <br></li>
  <li>Improved OpenGL-side housekeeping functions for GL extensions, texturing and combiner emulation<br>
  &bull; Should hopefully improve usability with lower end graphics cards</li>
</ul>
<h4>v1.0 Beta 3</h4>
<ul>
  <li>Support for ROMs with z64tables hack</li>
  <li>ROM loader error handling changed; now allows access to exception details for reporting</li>
  <li>Human-readable actor names now read from ActorNames.xml instead of individual actor definitions</li>
  <li>XML data files rearranged; removed AddressTranslations.xml and address translator class, added more versatile hashtable reader class, also used by actor names</li>
  <li>Object names are now version-independant, using the hashtable reader class mentioned above</li>
  <li>Added collsion rendering with two different highlighting modes (all white, or approximately by ground type)</li>
  <li>Actor definitions changed to use hexadecimal values for rotation</li>
</ul>
<h4>v1.0 Beta 2</h4>
<ul>
  <li>Some renderer bugfixes and improvements; blending error fixed, Texgen support added</li>
  <li>Added path waypoint support; waypoints can be edited and saved, their rendering, and them being linked by lines, can toggled from the menu</li>
  <li>Changed the tab order according to your suggestions (new Scene Metadata tab is still empty and hidden)</li>
  <li>Fixed - or rather worked around - a bug with multi-header scenes; caused room actor changes to not be saved, unless they were done from the last scene header</li>
  <li>New actor definition for the Kakariko carpenters</li>
  <li>Texturing and combiner emulation can now be toggled from the menu</li>
</ul>
<h4>v1.0 Beta 1</h4>
<ul>
  <li>Improved Ucode interpreter and renderer (texturing, color combiner)</li>
  <li>Room objects and special scene objects editing</li>
  <li>Now scans for and reads more data tables (actor, object and exit tables)</li>
  <li>Data table editing (exit and scene tables, within limits)</li>
  <li>Improved address translation support (now works for scene, room and object names)</li>
  <li>More XML actor definitions and address translations</li>
  <li>Preliminary mouse-based actor editing (so far only selecting actors via right-click)</li>
</ul>
<h4>v0.9 WIP</h4>
<ul>
  <li>Initial public release</li>
</ul>
<hr>
SceneNavi - written 2013-2014 by xdaniel / <a href="http://magicstone.de/dzd/" target="_blank">http://magicstone.de/dzd/</a><br>
</body>
</html>
